/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.myDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage
 * @generated
 */
public class MyDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS:
      {
        ProblemSpecifications problemSpecifications = (ProblemSpecifications)theEObject;
        T result = caseProblemSpecifications(problemSpecifications);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CONDITION:
      {
        Condition condition = (Condition)theEObject;
        T result = caseCondition(condition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.EVENT:
      {
        Event event = (Event)theEObject;
        T result = caseEvent(event);
        if (result == null) result = caseCondition(event);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ACTION_END:
      {
        ActionEnd actionEnd = (ActionEnd)theEObject;
        T result = caseActionEnd(actionEnd);
        if (result == null) result = caseCondition(actionEnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.LOCATION_EVENT:
      {
        LocationEvent locationEvent = (LocationEvent)theEObject;
        T result = caseLocationEvent(locationEvent);
        if (result == null) result = caseCondition(locationEvent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.LOCATION:
      {
        Location location = (Location)theEObject;
        T result = caseLocation(location);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ROBOTS:
      {
        Robots robots = (Robots)theEObject;
        T result = caseRobots(robots);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TOP_MISSIONS:
      {
        TopMissions topMissions = (TopMissions)theEObject;
        T result = caseTopMissions(topMissions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.MISSIONS:
      {
        Missions missions = (Missions)theEObject;
        T result = caseMissions(missions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.MISSION_OPERATION:
      {
        MissionOperation missionOperation = (MissionOperation)theEObject;
        T result = caseMissionOperation(missionOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SHALL_MISSIONS:
      {
        ShallMissions shallMissions = (ShallMissions)theEObject;
        T result = caseShallMissions(shallMissions);
        if (result == null) result = caseMissions(shallMissions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMPLEX_MISSIONS:
      {
        ComplexMissions complexMissions = (ComplexMissions)theEObject;
        T result = caseComplexMissions(complexMissions);
        if (result == null) result = caseMissions(complexMissions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.NEGATION:
      {
        Negation negation = (Negation)theEObject;
        T result = caseNegation(negation);
        if (result == null) result = caseMissionOperation(negation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMPOSITION:
      {
        Composition composition = (Composition)theEObject;
        T result = caseComposition(composition);
        if (result == null) result = caseMissionOperation(composition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SPECIFICATION_PATTERNS:
      {
        SpecificationPatterns specificationPatterns = (SpecificationPatterns)theEObject;
        T result = caseSpecificationPatterns(specificationPatterns);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.VISIT1:
      {
        Visit1 visit1 = (Visit1)theEObject;
        T result = caseVisit1(visit1);
        if (result == null) result = caseSpecificationPatterns(visit1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PATROL:
      {
        Patrol patrol = (Patrol)theEObject;
        T result = casePatrol(patrol);
        if (result == null) result = caseSpecificationPatterns(patrol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.AVOIDANCE_VISIT:
      {
        AvoidanceVisit avoidanceVisit = (AvoidanceVisit)theEObject;
        T result = caseAvoidanceVisit(avoidanceVisit);
        if (result == null) result = caseSpecificationPatterns(avoidanceVisit);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.VISIT2:
      {
        Visit2 visit2 = (Visit2)theEObject;
        T result = caseVisit2(visit2);
        if (result == null) result = caseAvoidanceVisit(visit2);
        if (result == null) result = caseSpecificationPatterns(visit2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.AVOID:
      {
        Avoid avoid = (Avoid)theEObject;
        T result = caseAvoid(avoid);
        if (result == null) result = caseAvoidanceVisit(avoid);
        if (result == null) result = caseSpecificationPatterns(avoid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT:
      {
        React react = (React)theEObject;
        T result = caseReact(react);
        if (result == null) result = caseSpecificationPatterns(react);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COUNTERACT:
      {
        Counteract counteract = (Counteract)theEObject;
        T result = caseCounteract(counteract);
        if (result == null) result = caseSpecificationPatterns(counteract);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.WAIT:
      {
        Wait wait = (Wait)theEObject;
        T result = caseWait(wait);
        if (result == null) result = caseSpecificationPatterns(wait);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.DELAYED:
      {
        Delayed delayed = (Delayed)theEObject;
        T result = caseDelayed(delayed);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ELEMENTARY_PATTERNS:
      {
        ElementaryPatterns elementaryPatterns = (ElementaryPatterns)theEObject;
        T result = caseElementaryPatterns(elementaryPatterns);
        if (result == null) result = caseMissions(elementaryPatterns);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.MAXIMIZE:
      {
        Maximize maximize = (Maximize)theEObject;
        T result = caseMaximize(maximize);
        if (result == null) result = caseElementaryPatterns(maximize);
        if (result == null) result = caseMissions(maximize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.AT_MOST:
      {
        AtMost atMost = (AtMost)theEObject;
        T result = caseAtMost(atMost);
        if (result == null) result = caseElementaryPatterns(atMost);
        if (result == null) result = caseMissions(atMost);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.WITHIN:
      {
        Within within = (Within)theEObject;
        T result = caseWithin(within);
        if (result == null) result = caseElementaryPatterns(within);
        if (result == null) result = caseMissions(within);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMPOSITE_PATTERNS:
      {
        CompositePatterns compositePatterns = (CompositePatterns)theEObject;
        T result = caseCompositePatterns(compositePatterns);
        if (result == null) result = caseMissions(compositePatterns);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CONSERVATION:
      {
        Conservation conservation = (Conservation)theEObject;
        T result = caseConservation(conservation);
        if (result == null) result = caseCompositePatterns(conservation);
        if (result == null) result = caseMissions(conservation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PRESERVATION:
      {
        Preservation preservation = (Preservation)theEObject;
        T result = casePreservation(preservation);
        if (result == null) result = caseCompositePatterns(preservation);
        if (result == null) result = caseMissions(preservation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PAUSE:
      {
        Pause pause = (Pause)theEObject;
        T result = casePause(pause);
        if (result == null) result = caseCompositePatterns(pause);
        if (result == null) result = caseMissions(pause);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TIMEOUT:
      {
        Timeout timeout = (Timeout)theEObject;
        T result = caseTimeout(timeout);
        if (result == null) result = caseCompositePatterns(timeout);
        if (result == null) result = caseMissions(timeout);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REPEAT:
      {
        Repeat repeat = (Repeat)theEObject;
        T result = caseRepeat(repeat);
        if (result == null) result = caseCompositePatterns(repeat);
        if (result == null) result = caseMissions(repeat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.END:
      {
        End end = (End)theEObject;
        T result = caseEnd(end);
        if (result == null) result = caseCompositePatterns(end);
        if (result == null) result = caseMissions(end);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PROPORTIONAL:
      {
        Proportional proportional = (Proportional)theEObject;
        T result = caseProportional(proportional);
        if (result == null) result = caseCompositePatterns(proportional);
        if (result == null) result = caseMissions(proportional);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.EXECUTE:
      {
        Execute execute = (Execute)theEObject;
        T result = caseExecute(execute);
        if (result == null) result = caseCompositePatterns(execute);
        if (result == null) result = caseMissions(execute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ACCRUE:
      {
        Accrue accrue = (Accrue)theEObject;
        T result = caseAccrue(accrue);
        if (result == null) result = caseCompositePatterns(accrue);
        if (result == null) result = caseMissions(accrue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.RELIABILITY_CONFIDENCE:
      {
        ReliabilityConfidence reliabilityConfidence = (ReliabilityConfidence)theEObject;
        T result = caseReliabilityConfidence(reliabilityConfidence);
        if (result == null) result = caseCompositePatterns(reliabilityConfidence);
        if (result == null) result = caseMissions(reliabilityConfidence);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.EQUIDISTANCE:
      {
        Equidistance equidistance = (Equidistance)theEObject;
        T result = caseEquidistance(equidistance);
        if (result == null) result = caseCompositePatterns(equidistance);
        if (result == null) result = caseMissions(equidistance);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TRAIL:
      {
        Trail trail = (Trail)theEObject;
        T result = caseTrail(trail);
        if (result == null) result = caseCompositePatterns(trail);
        if (result == null) result = caseMissions(trail);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Problem Specifications</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Problem Specifications</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProblemSpecifications(ProblemSpecifications object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCondition(Condition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Event</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Event</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEvent(Event object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action End</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action End</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionEnd(ActionEnd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location Event</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location Event</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocationEvent(LocationEvent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocation(Location object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Robots</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Robots</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRobots(Robots object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Top Missions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Top Missions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTopMissions(TopMissions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Missions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Missions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMissions(Missions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mission Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mission Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMissionOperation(MissionOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Shall Missions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Shall Missions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseShallMissions(ShallMissions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Complex Missions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Complex Missions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComplexMissions(ComplexMissions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Negation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Negation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNegation(Negation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Composition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Composition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComposition(Composition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Specification Patterns</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Specification Patterns</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSpecificationPatterns(SpecificationPatterns object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Visit1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Visit1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVisit1(Visit1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Patrol</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Patrol</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePatrol(Patrol object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Avoidance Visit</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Avoidance Visit</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAvoidanceVisit(AvoidanceVisit object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Visit2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Visit2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVisit2(Visit2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Avoid</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Avoid</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAvoid(Avoid object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReact(React object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Counteract</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Counteract</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCounteract(Counteract object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Wait</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Wait</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWait(Wait object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delayed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delayed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDelayed(Delayed object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Elementary Patterns</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Elementary Patterns</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElementaryPatterns(ElementaryPatterns object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Maximize</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Maximize</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMaximize(Maximize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>At Most</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>At Most</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAtMost(AtMost object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Within</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Within</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWithin(Within object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Composite Patterns</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Composite Patterns</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCompositePatterns(CompositePatterns object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Conservation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Conservation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConservation(Conservation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Preservation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Preservation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePreservation(Preservation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pause</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pause</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePause(Pause object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Timeout</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Timeout</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTimeout(Timeout object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Repeat</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Repeat</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRepeat(Repeat object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnd(End object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proportional</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proportional</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProportional(Proportional object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Execute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Execute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExecute(Execute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Accrue</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Accrue</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAccrue(Accrue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reliability Confidence</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reliability Confidence</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReliabilityConfidence(ReliabilityConfidence object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Equidistance</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Equidistance</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEquidistance(Equidistance object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trail</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trail</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrail(Trail object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyDslSwitch
