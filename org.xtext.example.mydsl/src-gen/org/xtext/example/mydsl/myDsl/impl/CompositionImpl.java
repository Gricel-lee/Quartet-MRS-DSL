/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.Composition;
import org.xtext.example.mydsl.myDsl.Missions;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Composition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CompositionImpl#getMiss1 <em>Miss1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CompositionImpl#getBinaryType <em>Binary Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CompositionImpl#getMiss2 <em>Miss2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompositionImpl extends MissionOperationImpl implements Composition
{
  /**
   * The cached value of the '{@link #getMiss1() <em>Miss1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMiss1()
   * @generated
   * @ordered
   */
  protected Missions miss1;

  /**
   * The default value of the '{@link #getBinaryType() <em>Binary Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinaryType()
   * @generated
   * @ordered
   */
  protected static final String BINARY_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBinaryType() <em>Binary Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinaryType()
   * @generated
   * @ordered
   */
  protected String binaryType = BINARY_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getMiss2() <em>Miss2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMiss2()
   * @generated
   * @ordered
   */
  protected Missions miss2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompositionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMPOSITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Missions getMiss1()
  {
    return miss1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMiss1(Missions newMiss1, NotificationChain msgs)
  {
    Missions oldMiss1 = miss1;
    miss1 = newMiss1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPOSITION__MISS1, oldMiss1, newMiss1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMiss1(Missions newMiss1)
  {
    if (newMiss1 != miss1)
    {
      NotificationChain msgs = null;
      if (miss1 != null)
        msgs = ((InternalEObject)miss1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPOSITION__MISS1, null, msgs);
      if (newMiss1 != null)
        msgs = ((InternalEObject)newMiss1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPOSITION__MISS1, null, msgs);
      msgs = basicSetMiss1(newMiss1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPOSITION__MISS1, newMiss1, newMiss1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBinaryType()
  {
    return binaryType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBinaryType(String newBinaryType)
  {
    String oldBinaryType = binaryType;
    binaryType = newBinaryType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPOSITION__BINARY_TYPE, oldBinaryType, binaryType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Missions getMiss2()
  {
    return miss2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMiss2(Missions newMiss2, NotificationChain msgs)
  {
    Missions oldMiss2 = miss2;
    miss2 = newMiss2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPOSITION__MISS2, oldMiss2, newMiss2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMiss2(Missions newMiss2)
  {
    if (newMiss2 != miss2)
    {
      NotificationChain msgs = null;
      if (miss2 != null)
        msgs = ((InternalEObject)miss2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPOSITION__MISS2, null, msgs);
      if (newMiss2 != null)
        msgs = ((InternalEObject)newMiss2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPOSITION__MISS2, null, msgs);
      msgs = basicSetMiss2(newMiss2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPOSITION__MISS2, newMiss2, newMiss2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPOSITION__MISS1:
        return basicSetMiss1(null, msgs);
      case MyDslPackage.COMPOSITION__MISS2:
        return basicSetMiss2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPOSITION__MISS1:
        return getMiss1();
      case MyDslPackage.COMPOSITION__BINARY_TYPE:
        return getBinaryType();
      case MyDslPackage.COMPOSITION__MISS2:
        return getMiss2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPOSITION__MISS1:
        setMiss1((Missions)newValue);
        return;
      case MyDslPackage.COMPOSITION__BINARY_TYPE:
        setBinaryType((String)newValue);
        return;
      case MyDslPackage.COMPOSITION__MISS2:
        setMiss2((Missions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPOSITION__MISS1:
        setMiss1((Missions)null);
        return;
      case MyDslPackage.COMPOSITION__BINARY_TYPE:
        setBinaryType(BINARY_TYPE_EDEFAULT);
        return;
      case MyDslPackage.COMPOSITION__MISS2:
        setMiss2((Missions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPOSITION__MISS1:
        return miss1 != null;
      case MyDslPackage.COMPOSITION__BINARY_TYPE:
        return BINARY_TYPE_EDEFAULT == null ? binaryType != null : !BINARY_TYPE_EDEFAULT.equals(binaryType);
      case MyDslPackage.COMPOSITION__MISS2:
        return miss2 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (binaryType: ");
    result.append(binaryType);
    result.append(')');
    return result.toString();
  }

} //CompositionImpl
