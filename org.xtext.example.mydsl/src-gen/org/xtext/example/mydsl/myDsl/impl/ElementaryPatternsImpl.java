/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.ElementaryPatterns;
import org.xtext.example.mydsl.myDsl.Missions;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Elementary Patterns</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementaryPatternsImpl#getReward <em>Reward</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementaryPatternsImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementaryPatternsImpl#getMeasure <em>Measure</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementaryPatternsImpl#getMission <em>Mission</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ElementaryPatternsImpl extends MissionsImpl implements ElementaryPatterns
{
  /**
   * The default value of the '{@link #getReward() <em>Reward</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReward()
   * @generated
   * @ordered
   */
  protected static final String REWARD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReward() <em>Reward</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReward()
   * @generated
   * @ordered
   */
  protected String reward = REWARD_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getMeasure() <em>Measure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMeasure()
   * @generated
   * @ordered
   */
  protected static final String MEASURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMeasure() <em>Measure</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMeasure()
   * @generated
   * @ordered
   */
  protected String measure = MEASURE_EDEFAULT;

  /**
   * The cached value of the '{@link #getMission() <em>Mission</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMission()
   * @generated
   * @ordered
   */
  protected Missions mission;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ElementaryPatternsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ELEMENTARY_PATTERNS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReward()
  {
    return reward;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReward(String newReward)
  {
    String oldReward = reward;
    reward = newReward;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENTARY_PATTERNS__REWARD, oldReward, reward));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENTARY_PATTERNS__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMeasure()
  {
    return measure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMeasure(String newMeasure)
  {
    String oldMeasure = measure;
    measure = newMeasure;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENTARY_PATTERNS__MEASURE, oldMeasure, measure));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Missions getMission()
  {
    return mission;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMission(Missions newMission, NotificationChain msgs)
  {
    Missions oldMission = mission;
    mission = newMission;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENTARY_PATTERNS__MISSION, oldMission, newMission);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMission(Missions newMission)
  {
    if (newMission != mission)
    {
      NotificationChain msgs = null;
      if (mission != null)
        msgs = ((InternalEObject)mission).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ELEMENTARY_PATTERNS__MISSION, null, msgs);
      if (newMission != null)
        msgs = ((InternalEObject)newMission).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ELEMENTARY_PATTERNS__MISSION, null, msgs);
      msgs = basicSetMission(newMission, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENTARY_PATTERNS__MISSION, newMission, newMission));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENTARY_PATTERNS__MISSION:
        return basicSetMission(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENTARY_PATTERNS__REWARD:
        return getReward();
      case MyDslPackage.ELEMENTARY_PATTERNS__TYPE:
        return getType();
      case MyDslPackage.ELEMENTARY_PATTERNS__MEASURE:
        return getMeasure();
      case MyDslPackage.ELEMENTARY_PATTERNS__MISSION:
        return getMission();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENTARY_PATTERNS__REWARD:
        setReward((String)newValue);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__TYPE:
        setType((String)newValue);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__MEASURE:
        setMeasure((String)newValue);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__MISSION:
        setMission((Missions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENTARY_PATTERNS__REWARD:
        setReward(REWARD_EDEFAULT);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__MEASURE:
        setMeasure(MEASURE_EDEFAULT);
        return;
      case MyDslPackage.ELEMENTARY_PATTERNS__MISSION:
        setMission((Missions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENTARY_PATTERNS__REWARD:
        return REWARD_EDEFAULT == null ? reward != null : !REWARD_EDEFAULT.equals(reward);
      case MyDslPackage.ELEMENTARY_PATTERNS__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MyDslPackage.ELEMENTARY_PATTERNS__MEASURE:
        return MEASURE_EDEFAULT == null ? measure != null : !MEASURE_EDEFAULT.equals(measure);
      case MyDslPackage.ELEMENTARY_PATTERNS__MISSION:
        return mission != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (reward: ");
    result.append(reward);
    result.append(", type: ");
    result.append(type);
    result.append(", measure: ");
    result.append(measure);
    result.append(')');
    return result.toString();
  }

} //ElementaryPatternsImpl
