/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Action;
import org.xtext.example.mydsl.myDsl.Condition;
import org.xtext.example.mydsl.myDsl.Location;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.ProblemSpecifications;
import org.xtext.example.mydsl.myDsl.Robots;
import org.xtext.example.mydsl.myDsl.TopMissions;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Problem Specifications</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProblemSpecificationsImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProblemSpecificationsImpl#getAction <em>Action</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProblemSpecificationsImpl#getRobots <em>Robots</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProblemSpecificationsImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProblemSpecificationsImpl#getTopmissions <em>Topmissions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProblemSpecificationsImpl extends MinimalEObjectImpl.Container implements ProblemSpecifications
{
  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected EList<Location> location;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected EList<Action> action;

  /**
   * The cached value of the '{@link #getRobots() <em>Robots</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobots()
   * @generated
   * @ordered
   */
  protected EList<Robots> robots;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected EList<Condition> condition;

  /**
   * The cached value of the '{@link #getTopmissions() <em>Topmissions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTopmissions()
   * @generated
   * @ordered
   */
  protected EList<TopMissions> topmissions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProblemSpecificationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PROBLEM_SPECIFICATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Location> getLocation()
  {
    if (location == null)
    {
      location = new EObjectContainmentEList<Location>(Location.class, this, MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION);
    }
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Action> getAction()
  {
    if (action == null)
    {
      action = new EObjectContainmentEList<Action>(Action.class, this, MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION);
    }
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Robots> getRobots()
  {
    if (robots == null)
    {
      robots = new EObjectContainmentEList<Robots>(Robots.class, this, MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS);
    }
    return robots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Condition> getCondition()
  {
    if (condition == null)
    {
      condition = new EObjectContainmentEList<Condition>(Condition.class, this, MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION);
    }
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TopMissions> getTopmissions()
  {
    if (topmissions == null)
    {
      topmissions = new EObjectContainmentEList<TopMissions>(TopMissions.class, this, MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS);
    }
    return topmissions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION:
        return ((InternalEList<?>)getLocation()).basicRemove(otherEnd, msgs);
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION:
        return ((InternalEList<?>)getAction()).basicRemove(otherEnd, msgs);
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS:
        return ((InternalEList<?>)getRobots()).basicRemove(otherEnd, msgs);
      case MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION:
        return ((InternalEList<?>)getCondition()).basicRemove(otherEnd, msgs);
      case MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS:
        return ((InternalEList<?>)getTopmissions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION:
        return getLocation();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION:
        return getAction();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS:
        return getRobots();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION:
        return getCondition();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS:
        return getTopmissions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION:
        getLocation().clear();
        getLocation().addAll((Collection<? extends Location>)newValue);
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION:
        getAction().clear();
        getAction().addAll((Collection<? extends Action>)newValue);
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS:
        getRobots().clear();
        getRobots().addAll((Collection<? extends Robots>)newValue);
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION:
        getCondition().clear();
        getCondition().addAll((Collection<? extends Condition>)newValue);
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS:
        getTopmissions().clear();
        getTopmissions().addAll((Collection<? extends TopMissions>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION:
        getLocation().clear();
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION:
        getAction().clear();
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS:
        getRobots().clear();
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION:
        getCondition().clear();
        return;
      case MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS:
        getTopmissions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PROBLEM_SPECIFICATIONS__LOCATION:
        return location != null && !location.isEmpty();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ACTION:
        return action != null && !action.isEmpty();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__ROBOTS:
        return robots != null && !robots.isEmpty();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__CONDITION:
        return condition != null && !condition.isEmpty();
      case MyDslPackage.PROBLEM_SPECIFICATIONS__TOPMISSIONS:
        return topmissions != null && !topmissions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ProblemSpecificationsImpl
